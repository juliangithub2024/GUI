/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.rdp;

import java.awt.Point;
import java.util.ArrayList;

/**
 *
 * @author julian
 */
public class Rdp extends javax.swing.JFrame {
    
     public class tips
    {
        public Point init, end;  // puntos extremos del arco
        public char type1, type2; // type y num sirven para agilizar el rellenado
        public int num1, num2;    // de las matrices de entrada y salida
        // type = 0 para el lugar y 1 para la transición
        //  num indica el numero de lugar o transición, con esto se evita recalcular distancias
        tips( Point p1, Point p2, char type_1, int num_1, char type_2, int num_2 )
        {
           init = p1;
           end  = p2;
           type1 = type_1;  // si es lugar o transion
           num1  = num_1;    // numero de lugar o transicion
           type2 = type_2;
           num2  = num_2;
        }
        
    }
    
    
    
    int opcion=0; // Cada que se de click en un boton cambiara de valor
    int places=0; // contador de places
    /**
     * Creates new form Rdp
     */
    
     static ArrayList<Integer> MarcInicial2 = new ArrayList <Integer>();
     static ArrayList<Point> corEst2  = new ArrayList <Point>();
     static ArrayList<Point> corTrans = new ArrayList <Point>();
     static ArrayList<tips>  corArcs  = new ArrayList <tips>();
    
    
    
    
    public Rdp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        hacerEstado = new javax.swing.JButton();
        mouse = new javax.swing.JTextField();
        hacerTrans = new javax.swing.JButton();
        hacerArco = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frame0"); // NOI18N
        setPreferredSize(new java.awt.Dimension(910, 600));
        setSize(new java.awt.Dimension(900, 700));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel1.setText("Simulador de redes de Petri");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(772, 485));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 772, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );

        hacerEstado.setText("Places");
        hacerEstado.setName("hacerEstado"); // NOI18N
        hacerEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hacerEstadoMouseClicked(evt);
            }
        });

        mouse.setName("mouse"); // NOI18N

        hacerTrans.setText("Transition");
        hacerTrans.setPreferredSize(new java.awt.Dimension(75, 24));
        hacerTrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hacerTransMouseClicked(evt);
            }
        });

        hacerArco.setText("Arc");
        hacerArco.setPreferredSize(new java.awt.Dimension(75, 24));
        hacerArco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hacerArcoMouseClicked(evt);
            }
        });

        jButton2.setText("Token");
        jButton2.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Timer");
        jButton3.setPreferredSize(new java.awt.Dimension(75, 24));

        jButton4.setText("Simular");
        jButton4.setPreferredSize(new java.awt.Dimension(75, 24));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(246, 246, 246))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(hacerEstado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(hacerTrans, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(mouse, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(hacerArco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(hacerEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hacerTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hacerArco, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    int x2=0, y2=0;
    int x3=0, y3=0;
    char type1, type2;
    int num1, num2;
    
    
    int bandeaFlecha=0;
    int distTkns=0;
    int transitions=0;
    int nArcs = 0;
    int tokens=0; 
    
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // evento asignado al jpanel
        
        int x=evt.getX(); // esto es para obtener las coordenadas 
        int y=evt.getY(); // solo se inicializan las variables
                     
        mouse.setText(x+", "+y); // esto me da la posicion del mouse para ubicar 
        
        if(opcion==1){  /////////////////////////////////////////// hace estados
              places++;
              Petri.hacerEstado(jPanel1.getGraphics(), x, y, 40, 40); 
              //cordenadasEstadosA[places]=x; cordenadasEstadosB[places]=y;

              //corEst[places]= new Point(x, y);  // asignamos la cooerdenanda al punto 1 de 10

              corEst2.add(new Point(x, y));
              MarcInicial2.add(0);
        }
        
               
        
        if(opcion==2){
              Petri.hacerTransicion(jPanel1.getGraphics(), x, y, 20, 40); // esto hace una linea ////////////////
              transitions++;       //   places, transitions
              corTrans.add(new Point(x, y));
        }
        
         int i=0;
        // El arco debe establecerse entre un arco y una transicion (o viceversa)
      if (opcion==3) {  ///////////////////////////////  hacer flecha  ////////////////////////
          //Petri.hacerTransicion(jPanel1.getGraphics(), x, y, 500, 10); // esto hace una linea ////////////////
            Boolean bContinue = false;
            for ( i=0; i < places; i++)
            {
                distTkns=(int)Math.sqrt((corEst2.get(i).x - x)*(corEst2.get(i).x - x) + (corEst2.get(i).y - y)*(corEst2.get(i).y - y));
                if (distTkns <= 15 ){ // el 15 indica el radio en pixeles del places
                   bContinue = true;
                   if (bandeaFlecha==0)
                   {
                       type1 = 'p';
                       num1  = i;
                   }
                   else
                   {
                       type2 = 'p';
                       num2  = i;
                   }
                   break;
                }
            }

            if (bContinue == false)
            {
                for ( i=0; i < transitions; i++)
                {
                    distTkns=(int)Math.sqrt((corTrans.get(i).x - x)*(corTrans.get(i).x - x) + (corTrans.get(i).y - y)*(corTrans.get(i).y - y));
                    if (distTkns <= 30 ){ // el 30 indica una distancia proxima a la transicción
                       bContinue = true;
                       if (bandeaFlecha==0)
                       {
                           type1 = 't';
                           num1  = i;
                       }
                       else
                       {
                           type2 = 't';
                           num2  = i;
                       }
                       break;
                    }

                }
            }

              if (bContinue == false) 
              {
                  bandeaFlecha=0;
                  return;
              }

              if (bandeaFlecha==0){
                   //  Petri.hacerLinea2(jPanel1.getGraphics(), x, y, 40, 20, bandeaFlecha,dibuja);
                   bandeaFlecha=1;
                   x2=x;
                   y2=y;
                   //corArcs.add( new tips(new Point(x,y) ) );
                   
               }

              if(bandeaFlecha==1 && x!=x2){
                  x3=x;
                  y3=y;
                  int auxi = (int)Math.sqrt((x2 - x3)*(x2 - x3) + (y2 - y3)*(y2 - y3));
                  if (auxi < 40) // muy proximo se trata del mismo lugar o transición
                  {
                      bandeaFlecha=0;
                      return;
                  }


                  Petri.hacerLinea2(jPanel1.getGraphics(), x2, y2, x3, y3, 40, 20);
                  bandeaFlecha=0;
                  Point p1 = new Point (x2,y2);
                  Point p2 = new Point (x3,y3);
                  corArcs.add( new tips(p1, p2, type1, num1, type2, num2) );
                  nArcs++;
              }
         }  //of opcion==3
        
        
        
        
        
        
          if(opcion==4){  //  en esta opcion esta el metodo que dibuja el token
            for( i=0; i < places; i++){
                
                distTkns=(int)Math.sqrt((corEst2.get(i).x - x)*(corEst2.get(i).x - x) + (corEst2.get(i).y - y)*(corEst2.get(i).y - y));
                if(distTkns <= 15 ){ // el 15 indica el radio en pixeles del places
                     tokens++;
                     Petri.hacerToken(jPanel1.getGraphics(), x, y, 10, 10);         
                 
                    MarcInicial2.set(i, MarcInicial2.get(i) + 1);

                }
                
                                          
            }
         } 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void hacerEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hacerEstadoMouseClicked
        // TODO add your handling code here:
        
        opcion=1; // estado       
     
        mouse.setText(" Estados "); // esto me da la posicion del mouse para hubircar 
        
        
    }//GEN-LAST:event_hacerEstadoMouseClicked

    private void hacerTransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hacerTransMouseClicked
     
        opcion=2; // linea
        //Petri.hacerLinea(jPanel1.getGraphics(), 100, 100, 40, 20);
        mouse.setText(" Transicion "); // esto me da la posicion del mouse para hubircar 
    }//GEN-LAST:event_hacerTransMouseClicked

    private void hacerArcoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hacerArcoMouseClicked
        // TODO add your handling code here:
         opcion=3; // arco
         mouse.setText(" Arco "); // esto me da la posicion del mouse para hubircar   
         //  repaint();
        
        
    }//GEN-LAST:event_hacerArcoMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        opcion=4; // token
        
        mouse.setText(" Tokens "); // esto me da la posicion del mouse para hubircar 
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rdp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rdp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hacerArco;
    private javax.swing.JButton hacerEstado;
    private javax.swing.JButton hacerTrans;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mouse;
    // End of variables declaration//GEN-END:variables
}
